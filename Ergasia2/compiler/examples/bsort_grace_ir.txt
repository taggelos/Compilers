1: unit, main , -, -
2: unit, bsort , -, -
3: unit, swap , -, -
4: :=, t , -, x 
5: :=, x , -, y 
6: :=, y , -, t 
7: endu, swap , -, -
8: :=, changed , -, 1 
9: >, changed , 0 , 11
10: jump, -, -, 36
11: :=, changed , -, 0 
12: :=, i , -, 0 
13: -, n , 1 , $1
14: <, i , $1, 16
15: jump, -, -, 35
16: +, i , 0, $2
17: array, x, $2, $3
18: +, i , 1 , $4
19: +, $4, 0, $5
20: array, x, $5, $6
21: >, [$3], [$6], 23
22: jump, -, -, 32
23: +, i , 0, $7
24: array, x, $7, $8
25: par, [$8], R, -
26: +, i , 1 , $9
27: +, $9, 0, $10
28: array, x, $10, $11
29: par, [$11], R, -
30: call, -, -, swap 
31: :=, changed , -, 1 
32: +, i , 1 , $12
33: :=, i , -, $12
34: jump1, -, -, 13
35: jump1, -, -, 9
36: endu, bsort , -, -
37: unit, putArray , -, -
38: par, msg , R, -
39: call, -, -, puts 
40: :=, i , -, 0 
41: <, i , n , 43
42: jump, -, -, 54
43: >, i , 0 , 45
44: jump, -, -, 47
45: par, ", " , R, -
46: call, -, -, writeString 
47: +, i , 0, $13
48: array, x, $13, $14
49: par, [$14], V, -
50: call, -, -, puti 
51: +, i , 1 , $15
52: :=, i , -, $15
53: jump1, -, -, 41
54: par, "\n" , R, -
55: call, -, -, puts 
56: endu, putArray , -, -
57: :=, seed , -, 65 
58: :=, i , -, 0 
59: <, i , 16 , 61
60: jump, -, -, 72
61: *, seed , 137 , $16
62: +, $16, 220 , $17
63: +, $17, i , $18
64: mod, $18, 101 , $19
65: :=, seed , -, $19
66: +, i , 0, $20
67: array, x, $20, $21
68: :=, [$21], -, seed 
69: +, i , 1 , $22
70: :=, i , -, $22
71: jump1, -, -, 59
72: par, "Initial array: " , R, -
73: par, 16 , V, -
74: par, x , R, -
75: call, -, -, putArray 
76: par, 16 , V, -
77: par, x , R, -
78: call, -, -, bsort 
79: par, "Sorted array: " , R, -
80: par, 16 , V, -
81: par, x , R, -
82: call, -, -, putArray 
83: endu, main , -, -
