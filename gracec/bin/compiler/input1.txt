$$
var i : int;
var x, y, z : int;
var s : char[80];


$$

fun hello2 () : nothing
{


	number <- 6;
   while number <= limit do {
      if prime(number - 1) = 1 then {
         counter <- counter + 1;
         puti(number - 1);
         puts("\n");
      }
  }
	
}



$$


else if n<2 then return 0;
	else if n=n then return 1;
	else if n mod 2 = 0 then return n mod 2;
	else {
		i <- 3;
		while i <= n mod 2 do {
			if n mod i = 0 then
			return 0;
			i <- i + 2;
		}
		return 1;
	}




fun hello () : nothing

{
	if 1 then i <- 3;
	else 
		if 1 then i <- 3;
		else 
			if 1 then return 0;
			else 
				if 1 then return i+1;
				else {
					i <- 3;
					while 1 do {
						if 11 then {
							counter <- counter + 1;
							puti(number - 1);
							puts("\n");
						}
						if 21 then {
							counter <- counter + 1;
							puti(number + 1);
							puts("\n");
						}
						number <- number + 6;
					}
				i <- 3;
				}
}

fun hello3 () : nothing
{
	puts("Limit: ");
	limit <- geti();
	puts("Primes:\n");
	counter <- 0;
	if limit >= 2 then {
		counter <- counter + 1;
		puti(2);
		puts("\n");
	}
	if limit >= 3 then {
		counter <- counter + 1;
		puti(3);
		puts("\n");
	}
	number <- 6;
	while number <= limit do {
		if prime(number - 1) = 1 then {
			counter <- counter + 1;
			puti(number - 1);
			puts("\n");
		}
		if number # limit and prime(number + 1) = 1 then {
			counter <- counter + 1;
			puti(number + 1);
			puts("\n");
		}
		number <- number + 6;
	}
	puts("\nTotal: ");
	puti(counter);
	puts("\n");

}
$$