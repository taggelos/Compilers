/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.analysis;

import compiler.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAExprList(AExprList node);
    void caseAKaratseLine(AKaratseLine node);
    void caseALefterhsLine(ALefterhsLine node);
    void caseAExpr1Expr(AExpr1Expr node);
    void caseAExpr2Expr(AExpr2Expr node);
    void caseAExpr3Expr(AExpr3Expr node);
    void caseAFactor1Factor(AFactor1Factor node);
    void caseAFactor2Factor(AFactor2Factor node);
    void caseAFactor3Factor(AFactor3Factor node);
    void caseATerm1Term(ATerm1Term node);
    void caseATerm2Term(ATerm2Term node);
    void caseAVarDec1VarDec(AVarDec1VarDec node);
    void caseAVarIds1VarIds(AVarIds1VarIds node);
    void caseAVarIds2VarIds(AVarIds2VarIds node);
    void caseAVarType1VarType(AVarType1VarType node);
    void caseAVarType2VarType(AVarType2VarType node);
    void caseAVarType3VarType(AVarType3VarType node);
    void caseAVarType4VarType(AVarType4VarType node);

    void caseTWhiteSpace(TWhiteSpace node);
    void caseTEscapeSeq(TEscapeSeq node);
    void caseTAnd(TAnd node);
    void caseTChar(TChar node);
    void caseTDiv(TDiv node);
    void caseTDo(TDo node);
    void caseTElse(TElse node);
    void caseTFun(TFun node);
    void caseTIf(TIf node);
    void caseTInt(TInt node);
    void caseTMod(TMod node);
    void caseTNot(TNot node);
    void caseTNothing(TNothing node);
    void caseTOr(TOr node);
    void caseTRef(TRef node);
    void caseTReturn(TReturn node);
    void caseTThen(TThen node);
    void caseTVar(TVar node);
    void caseTWhile(TWhile node);
    void caseTIntegers(TIntegers node);
    void caseTStringLiteral(TStringLiteral node);
    void caseTIdentifier(TIdentifier node);
    void caseTMinus(TMinus node);
    void caseTPlus(TPlus node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTHtag(THtag node);
    void caseTEq(TEq node);
    void caseTNeq(TNeq node);
    void caseTLt(TLt node);
    void caseTGt(TGt node);
    void caseTLteq(TLteq node);
    void caseTGteq(TGteq node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBr(TLBr node);
    void caseTRBr(TRBr node);
    void caseTLAg(TLAg node);
    void caseTRAg(TRAg node);
    void caseTComma(TComma node);
    void caseTSemi(TSemi node);
    void caseTColon(TColon node);
    void caseTArrow(TArrow node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
