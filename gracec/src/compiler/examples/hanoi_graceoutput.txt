Function Definition: 
	Name: solve 
	Parameters: 
	Return Type: nothing 
	Function Definition: 
		Name: hanoi 
		Parameters: 
			Parameter Name: rings 
			Parameter Type: int 

			Parameter Name: source 
			Parameter Name: target 
			Parameter Name: auxiliary 
			Parameter Type: char [ ] 

		Return Type: nothing 
		Function Definition: 
			Name: move 
			Parameters: 
				Parameter Name: source 
				Parameter Name: target 
				Parameter Type: char [ ] 

			Return Type: nothing 
			Body: 

				Function Call: 
					Name: puts 
					Arguments: 
						Type: char[]
						Value: "Moving from " 

				Function Call: 
					Name: puts 
					Arguments: 

						LVal Name: source 

				Function Call: 
					Name: puts 
					Arguments: 
						Type: char[]
						Value: " to " 

				Function Call: 
					Name: puts 
					Arguments: 

						LVal Name: target 

				Function Call: 
					Name: puts 
					Arguments: 
						Type: char[]
						Value: ".\n" 
			Body: 
				If statement: 
					Left (
						LVal Name: rings  )
					greater-equal than
					Right (
						Integer: 1 )
				Then
					Body: 

						Function Call: 
							Name: hanoi 
							Arguments: 
								 ( 
								LVal Name: rings   - 
								Integer: 1  ) 

								LVal Name: source 



								LVal Name: auxiliary 



								LVal Name: target 


						Function Call: 
							Name: move 
							Arguments: 

								LVal Name: source 


								LVal Name: target 


						Function Call: 
							Name: hanoi 
							Arguments: 
								 ( 
								LVal Name: rings   - 
								Integer: 1  ) 

								LVal Name: auxiliary 



								LVal Name: target 



								LVal Name: source 


					Variable Definition: 
						Name: NumberOfRings 
						Type: int 

					Body: 

						Function Call: 
							Name: writeString 
							Arguments: 
								Type: char[]
								Value: "Rings: " 
						Assignment: NumberOfRings <- geti ( ) ; 

							LVal Name: NumberOfRings  

							Function Call: 
								Name: geti 
								Arguments: 


						Function Call: 
							Name: hanoi 
							Arguments: 

								LVal Name: NumberOfRings 

								Type: char[]
								Value: "left" 


								Type: char[]
								Value: "right" 


								Type: char[]
								Value: "middle" 

